L.ToolbarIcon = L.Class.extend({

	statics: {
		baseClass: 'leaflet-toolbar-icon'
	},

	options: {
		html: '',
		className: '',
		hideOnClick: false
	},

	initialize: function(options) {
		L.setOptions(this, options);
	},

	onAdd: function(container, action) {
		var actionButton, link,
			secondaryActionContainer;

		actionButton = L.DomUtil.create('li', '', container);

		link = L.DomUtil.create('a', '', actionButton);
		link.innerHTML = this.options.html;
		link.setAttribute('href', '#');
		link.setAttribute('title', this.options.tooltip);

		L.DomUtil.addClass(link, 'leaflet-toolbar-icon');
		if (this.options.className) {
			L.DomUtil.addClass(link, this.options.className);
		}

		L.DomEvent.on(link, 'click', action.enable, action);

		for (var i = 0, l = action.options.children.length; i < l; i++) {
			this.addIcon(action.options.children[i], secondaryActionContainer);
		}
	},

	addIcon: function(action, container) {
		var icon = action.options.toolbarIcon || new L.ToolbarIcon();
		icon.onAdd(container, action);
	}
});

L.toolbarIcon = function(options) {
	return new L.ToolbarIcon(options);
};